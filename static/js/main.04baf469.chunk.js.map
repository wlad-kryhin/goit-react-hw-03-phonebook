{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/PhoneList/PhoneList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/PhoneList/PhoneList.module.css"],"names":["module","exports","PhoneList","list","onDelete","className","s","map","id","name","tel","text","number","button","type","onClick","BASE_STATE","ContactForm","state","handleInputChange","event","currentTarget","value","setState","resetState","handleFormSubmit","preventDefault","props","onSubmit","target","reset","this","form","label","input","placeholder","onChange","pattern","required","Component","Filter","change","App","contacts","filter","handleContactDelete","currentId","contact","handleFilterContacts","handleContactAdd","uuidv4","find","toLowerCase","alert","getFilterContacts","normalizeFilter","toLocaleLowerCase","includes","items","localStorage","getItem","itemsParse","JSON","parse","prevProps","prevState","console","log","setItem","stringify","filterContacts","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,uCCAxDD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,uJCEnH,SAASC,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACxC,OACE,oBAAIC,UAAWC,IAAEH,KAAjB,SACGA,EAAKI,KAAI,YAAwB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACrB,OACE,+BACE,mBAAGL,UAAWC,IAAEK,KAAhB,SAAuBF,IACvB,mBAAGJ,UAAWC,IAAEM,OAAhB,SAAyBF,IACzB,wBACEL,UAAWC,IAAEO,OACbC,KAAK,SACLC,QAAS,kBAAMX,EAASI,IAH1B,sBAHOA,Q,mCCJbQ,EAAa,CACjBP,KAAM,GACNC,IAAK,IAEcO,E,4MACnBC,M,eACKF,G,EAELG,kBAAoB,SAAAC,GAClB,MAAwBA,EAAMC,cAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBd,EAAOa,K,EAE1BE,WAAa,WACX,EAAKD,SAAL,eAAmBP,K,EAGrBS,iBAAmB,SAAAL,GACjBA,EAAMM,iBACN,EAAKC,MAAMC,SAAS,EAAKV,OACzBE,EAAMS,OAAOC,QACb,EAAKN,c,4CAGP,WACE,OACE,uBAAMI,SAAUG,KAAKN,iBAAkBpB,UAAWC,IAAE0B,KAApD,UACE,wBAAO3B,UAAWC,IAAE2B,MAApB,iBAEE,uBACEnB,KAAK,OACLL,KAAK,OACLJ,UAAWC,IAAE4B,MACbZ,MAAOS,KAAKtB,KACZ0B,YAAY,eACZC,SAAUL,KAAKZ,kBACfkB,QAAQ,yHACRC,UAAQ,OAGZ,wBAAOjC,UAAWC,IAAE2B,MAApB,gBAEE,uBACEnB,KAAK,MACLL,KAAK,MACLJ,UAAWC,IAAE4B,MACbC,YAAY,aACZC,SAAUL,KAAKZ,kBACfG,MAAOS,KAAKrB,IACZ2B,QAAQ,yFACRC,UAAQ,OAGZ,wBAAQxB,KAAK,SAAST,UAAWC,IAAEO,OAAnC,gC,GAhDiC0B,a,iBCL1B,SAASC,EAAT,GAAoC,IAAlBlB,EAAiB,EAAjBA,MAAOmB,EAAU,EAAVA,OACtC,OACE,wBAAOpC,UAAWC,IAAE2B,MAApB,kCAEE,uBACE5B,UAAWC,IAAE4B,MACbpB,KAAK,OACLQ,MAAOA,EACPc,SAAUK,EACVN,YAAY,uB,IC4ELO,E,4MAhFbxB,MAAQ,CACNyB,SAAU,GACVC,OAAQ,I,EAGVC,oBAAsB,SAAAC,GACpB,EAAKvB,UAAS,kBAAmB,CAC/BoB,SADY,EAAGA,SACIC,QAAO,SAAAG,GAAO,OAAIA,EAAQvC,KAAOsC,U,EAIxDE,qBAAuB,SAAA5B,GACrB,EAAKG,SAAS,CAAEqB,OAAQxB,EAAMC,cAAcC,S,EAe9C2B,iBAAmB,YAAoB,IAAjBxC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACpBqC,EAAU,CACdvC,GAAI0C,cACJzC,OACAC,OAEMiC,EAAa,EAAKzB,MAAlByB,SAGNA,EAASQ,MACP,SAAAJ,GAAO,OAAIA,EAAQtC,KAAK2C,gBAAkB3C,EAAK2C,iBAGjDC,MAAM,GAAD,OAAI5C,EAAJ,6BACIkC,EAASQ,MAAK,SAAAJ,GAAO,OAAIA,EAAQrC,MAAQA,KAClD2C,MAAM,GAAD,OAAI3C,EAAJ,6BAEL,EAAKa,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEI,GAAH,mBAAeJ,S,EAI7BW,kBAAoB,WAClB,MAA6B,EAAKpC,MAA1ByB,EAAR,EAAQA,SACFY,EADN,EAAkBX,OACaY,oBAE/B,OAAOb,EAASC,QAAO,SAAAG,GAAO,OAC5BA,EAAQtC,KAAK+C,oBAAoBC,SAASF,O,uDAxC9C,WACE,IAAMG,EAAQC,aAAaC,QAAQ,YAC7BC,EAAaC,KAAKC,MAAML,GAC1BG,GACF9B,KAAKR,SAAS,CAAEoB,SAAUkB,M,gCAG9B,SAAmBG,EAAWC,GACxBlC,KAAKb,MAAMyB,WAAasB,EAAUtB,WACpCuB,QAAQC,IAAI,0FACZR,aAAaS,QAAQ,WAAYN,KAAKO,UAAUtC,KAAKb,MAAMyB,c,oBAiC/D,WACE,MAA6BZ,KAAKb,MAA1ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OACZ0B,EAAiBvC,KAAKuB,oBAC5B,OACE,sBAAKjD,UAAU,YAAf,UACE,4CACA,cAAC,EAAD,CAAauB,SAAUG,KAAKkB,mBAC5B,0CACCN,EAAS4B,OAAS,GACjB,cAAC/B,EAAD,CAAQlB,MAAOsB,EAAQH,OAAQV,KAAKiB,uBAErCL,EAAS4B,OAAS,EACjB,cAACrE,EAAD,CACEC,KAAMmE,EACNlE,SAAU2B,KAAKc,sBAGjB,oE,GA3EQN,aCKHiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAxE,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,KAAO,wBAAwB,OAAS,6B","file":"static/js/main.04baf469.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1W9fx\",\"label\":\"Filter_label__3ovOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1MW_W\",\"label\":\"ContactForm_label__3CmiT\",\"input\":\"ContactForm_input__-h1GS\",\"button\":\"ContactForm_button__kn1FD\"};","import PropTypes from 'prop-types';\r\nimport s from './PhoneList.module.css';\r\n\r\nexport default function PhoneList({ list, onDelete }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nPhoneList.propTypes = {\r\n  list: PropTypes.array,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst BASE_STATE = {\r\n  name: '',\r\n  tel: '',\r\n};\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    ...BASE_STATE,\r\n  };\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  resetState = () => {\r\n    this.setState({ ...BASE_STATE });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    event.target.reset();\r\n    this.resetState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={this.name}\r\n            placeholder=\"Name Surname\"\r\n            onChange={this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Tel\r\n          <input\r\n            type=\"tel\"\r\n            name=\"tel\"\r\n            className={s.input}\r\n            placeholder=\"774-333-22\"\r\n            onChange={this.handleInputChange}\r\n            value={this.tel}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, change }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={change}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\nimport './index.css';\nimport { Component } from 'react';\nimport PhoneList from './components/PhoneList/PhoneList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleContactDelete = currentId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== currentId),\n    }));\n  };\n\n  handleFilterContacts = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n  componentDidMount() {\n    const items = localStorage.getItem('contacts');\n    const itemsParse = JSON.parse(items);\n    if (itemsParse) {\n      this.setState({ contacts: itemsParse });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('обновилось поле ');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  handleContactAdd = ({ name, tel }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      tel,\n    };\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.tel === tel)) {\n      alert(`${tel} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeFilter),\n    );\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    const filterContacts = this.getFilterContacts();\n    return (\n      <div className=\"container\">\n        <h1>PhoneBooks</h1>\n        <ContactForm onSubmit={this.handleContactAdd} />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} change={this.handleFilterContacts} />\n        )}\n        {contacts.length > 0 ? (\n          <PhoneList\n            list={filterContacts}\n            onDelete={this.handleContactDelete}\n          />\n        ) : (\n          <p>You are don*t have a contact</p>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__3Nbe0\",\"button\":\"PhoneList_button__2hscO\",\"text\":\"PhoneList_text__PAFIO\",\"number\":\"PhoneList_number__BUXzV\"};"],"sourceRoot":""}